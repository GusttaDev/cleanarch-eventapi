plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.learning.ddd'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

springBoot {
	buildInfo()
}

ext {
	set('springCloudVersion', "2023.0.0")
	set('mapstructVersion', '1.6.3')
	set('springDocVersion', '2.8.8')
	set('testcontainersVersion', '1.20.4')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	['compileOnly', 'annotationProcessor', 'testCompileOnly', 'testAnnotationProcessor'].each {
		conf -> add(conf, 'org.projectlombok:lombok')
	}

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor',
			"org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	// Spring Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	
	// Documentation
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
	
	// MapStruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	
	//Flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	
	// Database
	runtimeOnly 'com.mysql:mysql-connector-j:8.2.0'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'net.datafaker:datafaker:2.4.3'
	testImplementation 'org.awaitility:awaitility:4.2.2'
	testImplementation 'com.h2database:h2'
	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	options.setFork(true)
	options.setEncoding('UTF-8')
	options.compilerArgs += ['-parameters', '-Amapstruct.defaultComponentModel=spring']

	dependsOn(processResources)
}
